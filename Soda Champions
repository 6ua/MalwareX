local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
local venyx = library.new("Void | Soda Champions", 5013109572)

local themes = {
	Background = Color3.fromRGB(24, 24, 24),
	Glow = Color3.fromRGB(0, 0, 0),
	Accent = Color3.fromRGB(10, 10, 10),
	LightContrast = Color3.fromRGB(20, 20, 20),
	DarkContrast = Color3.fromRGB(14, 14, 14),  
	TextColor = Color3.fromRGB(255, 255, 255)
}
--------------------------Pages
local AutoFarmPage = venyx:addPage("Auto-Farm", 5012544693)
local AutoFarmSection = AutoFarmPage:addSection("Auto Farm")
local AutoCurrencySection = AutoFarmPage:addSection("Auto Currency")
local AutoUpgradeSection = AutoFarmPage:addSection("Auto Upgrade")
--
local AutoRebirthPage = venyx:addPage("Auto-Rebirth", 5012544693)
local AutoRebirthSection = AutoRebirthPage:addSection("Auto Rebirths")
--
local AutoEggPage = venyx:addPage("Auto-Egg", 5012544693)
local AutoEggSection = AutoEggPage:addSection("Auto Hatch")
--
local MiscPage = venyx:addPage("MISC", 5012544693)
local MiscSection = MiscPage:addSection("Misc")
--
local OtherPage = venyx:addPage("Settings", 5012544693)
local OtherSection = OtherPage:addSection("Settings")
local OtherSection2 = OtherPage:addSection("Credits")
---------------------------------------------------------------------

AutoFarmSection:addToggle("Auto Tap", nil, function(value)
AutoTap = value    
while AutoTap do wait()
    game:GetService("ReplicatedStorage").Events.GameMechanics.Events.TappingEvent:FireServer()
	print("Toggled", value)
end
end)
---------------------------------------------------------------------

AutoFarmSection:addToggle("Auto Rank", nil, function(value)
AutoRank = value    
while AutoRank do wait()
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.LegendRebirthUI.MainFrame.RankFrame.MainFrame.Display.ScrollMainBG.ScrollingFrame:GetChildren()) do
if v.ClassName == "ImageButton" then
game:GetService("ReplicatedStorage").Events.GameMechanics.Events.LegendRebirth:FireServer(v.Name)
end
end
    print("Toggled", value)
end
end)

---------------------------------------------------------------------

AutoCurrencySection:addToggle("Auto Coin", nil, function(value)
AutoCoin = value
while AutoCoin do wait()
for i, v in pairs(game:GetService("Workspace").Drops:GetChildren()) do
if v.ClassName == "TouchTransmitter" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.Parent.CFrame.Position + Vector3.new(0,0,0))
end
end
end
print("Toggled", value)
end)
---------------------------------------------------------------------

AutoCurrencySection:addToggle("Auto Rings", nil, function(value)
AutoRings= value    
while AutoRings do wait()
    for i,v in pairs(game:GetService("Workspace").Worlds:GetDescendants()) do
        if v.ClassName == "TouchTransmitter" then
                if v.Parent.Parent.Name == "CoinRing" then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.Parent.CFrame.Position + Vector3.new(0,0,0))
                wait()
            end
        end
    end
 print("Toggled", value)
end
end)

---------------------------------------------------------------------
local Upgrades = {}
for i,v in pairs(game:GetService("Players").LocalPlayer.Upgrades:GetChildren()) do
table.insert(Upgrades, v.Name)
end

AutoUpgradeSection:addDropdown("Select Rebirth", Upgrades, function(t)
    SelectedUpgrade = t
end)

AutoUpgradeSection:addToggle("Auto Upgrade", nil, function(value)
AutoUpgrade = value
while AutoUpgrade do wait()
        game:GetService("ReplicatedStorage").Events.GameMechanics.Events.LegendRebirth:FireServer(SelectedUpgrade)
end
print("Toggled", value)
end)

---------------------------------------------------------------------
local Rebirths = {}
for v, _ in pairs(game:GetService("Players").LocalPlayer.PlayerGui.RebirthGui.RebirthFrame.Background.RebirthFrame.ScrollingFrame:GetChildren()) do
    Rebirths[#Rebirths+1] = tostring(v)
end

AutoRebirthSection:addDropdown("Select Rebirth", Rebirths, function(t)
SelectedRebirth = t
end)

AutoRebirthSection:addToggle("Auto Rebirth", nil, function(value)
    AutoRebirth = value
    while AutoRebirth do wait()
        game:GetService("ReplicatedStorage").Events.GameMechanics.Events.RebirthEvent:FireServer(tonumber(SelectedRebirth))
    end
	print("Toggled", value)
end)
---------------------------------------------------------------------
local Eggs = {}
for i,v in pairs(game:GetService("ReplicatedStorage").UI.PetUI.Eggs:GetChildren()) do
    table.insert(Eggs, v.Name)
end

local SelectEggOption = 
{
    "1",
    "2",
    "4"
}

AutoEggSection:addDropdown("Select Egg", Eggs, function(t)
SelectedEgg = t
end)

AutoEggSection:addDropdown("Select Option", SelectEggOption, function(t)
    SelectedOption = t
end)

AutoEggSection:addToggle("Auto Hatch", nil, function(value)
AutoHatch = value

while AutoHatch do wait()
    if SelectedOption == "1" then
    local A_1 = SelectedEgg
    local A_2 = "1"
    local Event = game:GetService("ReplicatedStorage").Events.Pets.RollForPet
    Event:FireServer(A_1, A_2)
    if SelectedOption == "2" then
    local A_1 = SelectedEgg
    local A_2 = "2"
    local Event = game:GetService("ReplicatedStorage").Events.Pets.RollForPet
    Event:FireServer(A_1, A_2)
    if SelectedOption == "4" then
    local A_1 = SelectedEgg
    local A_2 = "4"
    local Event = game:GetService("ReplicatedStorage").Events.Pets.RollForPet
    Event:FireServer(A_1, A_2)
    end
end
    end
end
print("Toggled", value)
end)
----

